@model AdSite.Models.CRUDModels.CategoryTreeViewModel
@using AdSite.Views.Shared;
@using AdSite.Services;
@{
    AdminNavPages.AddActivePage(ViewContext, AdminNavPages.Categories);
}

@await Html.PartialAsync("_AdminNavigationPartial")
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

@section Scripts {
    <script src="~/lib/jstree/jstree.min.js" asp-append-version="true"></script>
    <script src="~/js/site.min.js" asp-append-version="true"></script>
    <script src="~/lib/toastr.js/toastr.min.js"></script>
    <script src="https://apis.google.com/js/platform.js" async defer></script>
}

<input type="hidden" id="RequestVerificationToken"
       name="RequestVerificationToken" value="@GetAntiXsrfRequestToken()">

<div style="display:none">
    <div id="toastError">
        <localize name="Toast_Error"></localize>
    </div>
    <div id="toastSuccess">
        <localize name="Toast_Success"></localize>
    </div>
    <div id="categories_new">
        <localize name="Categories_NewCategory"></localize>
    </div>
    <div id="deleteMessage">
        <localize name="Localization_DeleteMessage"></localize>
    </div>
</div>

<div class="">
    <button type="button" class="btn btn-success btn-md" onclick="jstree_create('stem');"><i class="glyphicon glyphicon-asterisk"></i><localize name="Categories_CreateCategoryStem"></localize></button>
    <button type="button" class="btn btn-success btn-md" onclick="jstree_create('leaf');"><i class="glyphicon glyphicon-asterisk"></i><localize name="Categories_CreateCategoryLeaf"></localize></button>
    <button type="button" class="btn btn-warning btn-md" onclick="jstree_rename();"><i class="glyphicon glyphicon-pencil"></i><localize name="Categories_EditCategory"></localize></button>
    <button type="button" class="btn btn-warning btn-md" onclick="jstree_deselectAll();"><i class="glyphicon glyphicon-pencil"></i><localize name="Categories_DeselectAll"></localize></button>
    <button type="button" class="btn btn-danger btn-md" onclick="jstree_delete();"><i class="glyphicon glyphicon-remove"></i><localize name="Categories_DeleteCategory"></localize></button>
</div>

<br />
<br />


<script>
    var removeElements = function (text, selector) {
        var wrapped = $("<div>" + text + "</div>");
        wrapped.find(selector).remove();
        return wrapped.html();
    }

    function jstree_create(type) {
        var newCategory = $("#categories_new").text();
        var ref = $('#jstree').jstree(true),
            sel = ref.get_selected();
        if (!sel.length) {
            sel = ref.create_node("#", { "text": newCategory, "type": "stem" });
            if (sel) {
                ref.edit(sel);
            }
        }
        else {
            sel = sel[0];
            if(type == 'leaf')
                sel = ref.create_node(sel, { "type": "leaf" });
            if (type == 'stem')
                sel = ref.create_node(sel, { "type": "stem" });
            if (sel) {
                ref.edit(sel);
            }
        }
    };
    function jstree_rename() {
        var ref = $('#jstree').jstree(true),
            sel = ref.get_selected();
        if (!sel.length) { return false; }
        sel = sel[0];
        ref.edit(sel);
    };
    function jstree_delete() {
        var ref = $('#jstree').jstree(true),
            sel = ref.get_selected();
        if (!sel.length) { return false; }
        ref.delete_node(sel);
    };


    function jstree_deselectAll() {
        var ref = $('#jstree').jstree(true),
            sel = ref.get_selected();
        if (!sel.length) { return false; }
        ref.deselect_all();
    };

    function isGuid(stringToTest) {
        if (stringToTest[0] === "{") {
            stringToTest = stringToTest.substring(1, stringToTest.length - 1);
        }
        var regexGuid = /^(\{){0,1}[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}(\}){0,1}$/gi;
        return regexGuid.test(stringToTest);
    }

    $(document).ready(function () {
        $(function () {
            var deleteMessage = $("#deleteMessage").text();
            var arrayCollection = @Html.Raw(Json.Serialize(Model.CategoriesAsTree));
            var pathString = @Html.Raw(Json.Serialize(Model.PathString));

            $('#jstree').jstree({
                "core": {
                    "multiple": false,
                    "animation": 0,
                    "check_callback": function (op) {
                        if (op === "delete_node") { return confirm(deleteMessage); }
                        return true;
                    },
                    "themes": { "stripes": true },
                    'data': arrayCollection
                },
                "types": {
                    "#": {
                        "max_children": 30,
                        "max_depth": 7,
                        "valid_children": ["stem"]
                    },
                    "stem": {
                        "icon": "glyphicon glyphicon-plus",
                        "valid_children": ["stem", "leaf"]
                    },
                    "leaf": {
                        "icon": "glyphicon glyphicon-leaf",
                        "valid_children": []
                    }
                },
                "plugins": [
                    "contextmenu", "dnd", "search",
                    "state", "types", "wholerow"
                ]
            });


            $('#jstree').on('rename_node.jstree', function (e, data) {
                var id = data.node.id;
                var parent;
                var type;
                if (data.node.parent != "#") {
                    parent = data.node.parent;
                }
                    type = data.node.type
                    if (isGuid(id))
                    {
                        let category = {
                            "Id": id, "Name": data.node.text, "ParentId": parent, "Type": type
                        };

                        $.ajax({
                            type: "POST",
                            url: "/"+ pathString +"/Categories/Edit",
                            data: JSON.stringify(category),
                            contentType: 'application/json',
                            success: function () {
                                location.reload();
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                location.reload();
                            },
                            headers: {
                                RequestVerificationToken: $('input:hidden[name="RequestVerificationToken"]').val()
                            },
                        });
                    }
                    else {
                        let category = {
                            "Name": data.node.text, "ParentId": parent, "Type": type
                        };

                        $.ajax({
                            type: "POST",
                            url: "/"+ pathString +"/Categories/Create",
                            data: JSON.stringify(category),
                            contentType: 'application/json',
                            success: function () {
                                location.reload();
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                location.reload();
                            },
                            headers: {
                                RequestVerificationToken: $('input:hidden[name="RequestVerificationToken"]').val()
                            },
                        });
                    }

            });

            $('#jstree').on('delete_node.jstree', function (e, data) {
                let Id = data.node.id;
                if (Id) {
                    $.ajax({
                        type: "POST",
                        url: "/"+ pathString +"/Categories/Delete/" + Id,
                        contentType: 'application/json',
                        success: function () {
                            location.reload();
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            location.reload();
                        },
                        headers: {
                            RequestVerificationToken: $('input:hidden[name="RequestVerificationToken"]').val()
                        },
                    });
                }
            });
    });
});
</script>

<div id="jstree">
</div>

<br />