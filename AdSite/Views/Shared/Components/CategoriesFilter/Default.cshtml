@model AdSite.Models.CRUDModels.CategoryFilterViewModel

@if (Model.ComponentCategories != null && Model.ComponentCategories.Any())
{
    Guid categoryId = (String.IsNullOrEmpty(Context.Request.Query["categoryId"]) ? Guid.Empty : Guid.Parse(Context.Request.Query["categoryId"]));

    @foreach (var category in Model.ComponentCategories)
    {
        @if (category.Children != null && category.Children.Count > 0)
        {
            <li class="categ-1 has_child">
                <a asp-action="Index"
                   asp-route-categoryId="@category.ID"
                   role="button"
                   aria-expanded="true"
                   class="@(category.ID == categoryId ? "active-category" : String.Empty )">
                    <span class="categ-1-label">
                        @category.Name
                    </span>
                    <span class="section-sb-toggle opened"><span class="section-sb-ico"></span></span>
                </a>
                <ul style="display:block">
                    @await Component.InvokeAsync("CategoriesFilter", new { categories = category.Children, isFirstCall = false })
                </ul>
            </li>
        }
        else
        {
            <li class="categ-1">
                <a asp-action="Index"
                   asp-route-categoryId="@category.ID"
                   role="button"
                   aria-expanded="true"
                   class="@(category.ID == categoryId ? "active-category" : String.Empty )">
                    <span class="categ-1-label">@category.Name</span>
                </a>
            </li>
        }
    }
}