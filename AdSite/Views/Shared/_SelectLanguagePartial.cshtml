@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@using AdSite.Models.CRUDModels

@inject IOptions<RequestLocalizationOptions> LocOptions

@section Scripts {
    <script src="~/lib/jquery/jquery.min.js" asp-append-version="true"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js" asp-append-version="true"></script>
    <script src="~/lib/bootstrap-select/js/bootstrap-select.min.js" asp-append-version="true"></script>
}

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new LanguageSelectViewModel { LanguageShortName = c.Name, LanguageName = c.DisplayName, CultureId = c.LCID })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<form id="selectLanguage" asp-controller="Languages"
      asp-action="SetLanguage" asp-route-returnUrl="@returnUrl"
      method="post" class="form-horizontal" role="form">

    <select class="selectpicker" name="culture"
            onchange="this.form.submit();">
        <options asp-items="cultureItems" selected-item-enabled="true" />
    </select>
    <script>
        $(function () {
            $('.selectpicker').selectpicker();
        });
    </script>
</form>